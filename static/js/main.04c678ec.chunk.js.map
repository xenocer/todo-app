{"version":3,"sources":["logo.svg","store/reducer/reducer.js","store/action.js","components/Input.js","components/List_Item.js","components/List.js","components/Detail.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","todos","JSON","parse","localStorage","getItem","selectTodo","todo","reducer","state","arguments","length","undefined","action","type","save","id","Math","floor","random","title","description","date","Date","toLocaleTimeString","status","ste","Object","objectSpread","push","deleteTodo","filter","assign","pop","check","i","update","value","newTodo","find","item","TodoInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input","handleChange","bind","assertThisInitialized","handleSubmit","react_default","a","createElement","reactstrap_es","onSubmit","sm","md","size","offset","name","onChange","className","event","addtodo","setState","preventDefault","target","Component","TodoListItem","_ref","checkTodo","selected","color","onClick","TodoList","console","log","todoListItems","map","List_Item","deletetodo","checktodo","selecttodo","key","TodoDetail","nextProps","style","padding","disabled","placeholder","updatetodo","defineProperty","App","val","onAddTask","setItem","stringify","task","onDeleteTask","onUpdateTask","onCheckTask","onSelectTask","src","logo","alt","Input","addTodo","List","Detail","updateTodo","connect","dispatch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","Reducer","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.04c678ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport * as actionTypes from '../action';\nconst initialState = {\n      todos: (JSON.parse(localStorage.getItem('state')) === null) ? [] : JSON.parse(localStorage.getItem('state')).todos,\n      selectTodo: false,\n      todo: null\n}; \n\n//window.onload=localStorage.clear();\n\n\nconst reducer = ( state = initialState, action ) => {\n\n//\n    switch ( action.type ) {\n            \n        case actionTypes.ADD:\n           \n            let save ={ \n                   \n                    todo : {\n                        id: Math.floor((Math.random() * 1000) + 1) ,\n                        title: action.title,\n                        description: '',\n                        date: new Date().toLocaleTimeString(),\n                        status: false\n                    },\n            };\n                let ste =  {...state}; \n                    ste.todos.push(save.todo);    \n         return ste ;\n \n                  \n        \n        case actionTypes.DELETE:\n                let deleteTodo = state.todos.filter(todo => todo.id !== action.id);\n                 \n//                console.log(JSON.parse(localStorage.getItem('state')).todos);\n            Object.assign(state.todos,state.todos.pop(deleteTodo));\n//                console.log(state);\n\n            \n            \n        case actionTypes.CHECK:\n     \n            let check = state.todos;\n            for (let i in check) {\n                if (check[i].id === action.id) {\n                    check[i].status = check[i].status === true ? false : true;\n                    break;\n                }\n            }\n                \n            return {\n                    ...state,\n                  todos: check \n            };\n\n        case actionTypes.UPDATE:\n                 \n                 let update = state.todos;\n                 for (let todo in update) {\n                     if (update[todo].id === action.id) {\n                         update[todo] = action.value\n                         break;\n                     }\n                 }\n                        \n              return{       ...state,\n                             todos: update ,\n                             selectTodo: false,\n                             todo: ''\n                    }; \n                    \n                  \n           \n            \n  \n            \n        case actionTypes.SELECT:\n            let newTodo = state.todos.find(item => item.id === action.id);\n    \n        return   {\n                    ...state,\n                selectTodo: true,\n                todo: newTodo\n        };\n           \n         \n\n            \n     \n            default: return state;\n\n    }\n   \n};\n\nexport default reducer;","export const ADD = 'ADD';\nexport const DELETE = 'DELETE';\nexport const CHECK = 'CHECK';\nexport const UPDATE = 'UPDATE';\nexport const SELECT = 'SELECT';\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nclass TodoInput extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {input: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // console.log(this.props);\n  }\n\n  render() {\n    return (\n      <div >\n        <Form onSubmit={this.handleSubmit}>\n              <FormGroup>\n                <Container>\n                    <legend>Task</legend>\n                    <Row>\n                        <Col sm=\"12\" md={{ size: 8, offset: 2 }}><Input type=\"text\" name=\"task\" value={this.state.input} onChange={this.handleChange}/></Col>\n                    </Row>\n                 </Container>\n                </FormGroup>\n              \n                <input type=\"submit\" value=\"add\" className=\"btn btn-default\" />\n        </Form>\n      </div>\n    );\n  }\n\n  handleSubmit(event) {\n    if(this.state.input !== '') {\n      // console.log(this.state.input);\n      this.props.addtodo(this.state.input);\n      this.setState({input: ''});\n    }\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({input: event.target.value});\n  }\n}\n\nexport default TodoInput;\n\n","import React from 'react';\nimport { ListGroupItem,Container, Row, Col } from 'reactstrap';\n// const TodoListItem = (props) => {\nconst TodoListItem = ({todo, deleteTodo, checkTodo, selectTodo}) => {\n//   console.log(todo);\n\n  const selected = todo.status ? 'success' : '';\n\n  return (\n    \n    <ListGroupItem color={selected} >\n      <Container>\n     \n       <Row>\n            <Col></Col>\n           \n            <Col>{todo.title} : {todo.description } </Col>\n            <Col sm=\"4\"> \n                <button type=\"button\" className=\"btn btn-xs btn-info img-circle\" onClick={() => selectTodo(todo.id)}>detail</button>\t&nbsp;\n                <button type=\"button\" className=\"btn btn-xs btn-success img-circle\" onClick={() => checkTodo(todo.id)}>&#x2713;</button>\t&nbsp;\n                <button type=\"button\" className=\"btn btn-xs btn-danger img-circle\" onClick={() => deleteTodo(todo.id)}>&#xff38;</button>\n           \n          </Col>\n        </Row>\n      </Container>\n    </ListGroupItem>\n  )\n}\n\nexport default TodoListItem;\n\n\n","import React from 'react';\nimport TodoListItem from './List_Item';\nimport { ListGroup} from 'reactstrap';\nconst TodoList = (props) => {\n   console.log(props.todos);\n\n  const todoListItems = props.todos.map(todo => {\n    return (\n      <TodoListItem\n        deleteTodo={props.deletetodo}\n        checkTodo={props.checktodo}\n        selectTodo={props.selecttodo}\n        key={todo.id}\n        todo={todo} />\n    )\n  });\n  // console.log(todoListItems);\n  return (\n    <div>\n      <ListGroup>\n        {\n            todoListItems\n        }\n      </ListGroup>\n    </div>\n  );\n}\n\nexport default TodoList;\n\n\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nclass TodoDetail extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.todo.id,\n      date: props.todo.date,\n      title: props.todo.title,\n      description: props.todo.description,\n      status: props.todo.status\n    };\n\n    // console.log(this.state);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // console.log(nextProps);\n\n    this.setState({\n      id: nextProps.todo.id,\n      date: nextProps.todo.date,\n      title: nextProps.todo.title,\n      description: nextProps.todo.description,\n      status: nextProps.todo.status\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>To do detail</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label className=\"col-md-2 control-label\">ID </label>\n            <div style={{padding:\"2%\"}} className=\"col-xs-6\">\n              <input type=\"text\" name=\"id\" className=\"form-control\" value={this.state.id} disabled/>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-md-2 control-label\">Date </label>\n            <div style={{padding:\"2%\"}} className=\"col-xs-6\">\n              <input type=\"text\" name=\"date\" className=\"form-control\" value={this.state.date} disabled/>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label  className=\"col-md-2 control-label\">Title </label>\n            <div style={{padding:\"2%\"}} className=\"col-xs-6\">\n              <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"title\" value={this.state.title} onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-md-2 control-label\">Description </label>\n            <div style={{padding:\"2%\"}} className=\"col-xs-6\">\n              <textarea name=\"description\" className=\"form-control\" value={this.state.description} onChange={this.handleChange} />\n            </div>\n          </div>\n\n          <br/>\n          <input type=\"submit\" value=\"save\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    );\n  }\n\n  handleSubmit(event) {\n\n    let id = this.state.id;\n    let value = {\n      id: id,\n      title: this.state.title,\n      description: this.state.description,\n      date: new Date().toLocaleTimeString(),\n      status: this.state.status\n    }\n    this.props.updatetodo(id, value);\n   \n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n\n  }\n\n}\n\nexport default TodoDetail;\n\n\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport TodoInput from './components/Input';\nimport TodoList from './components/List';\nimport TodoDetail from './components/Detail';\nimport * as actionTypes from './store/action';\n\nclass App extends Component {\n\n//  constructor(props) {\n//    super(props);\n//\n//    this.state = {\n//      // todos: [\n//      //   {id: 1, title: '111', description: '111', date: new Date().toLocaleTimeString(), status: false},\n//      //   {id: 2, title: '222', description: '222', date: new Date().toLocaleTimeString(), status: false},\n//      //   {id: 3, title: '333', description: '333', date: new Date().toLocaleTimeString(), status: false},\n//      // ],\n////      todos: (JSON.parse(localStorage.getItem('state')) === null) ? [] : JSON.parse(localStorage.getItem('state')).todos,\n////      selectTodo: false,\n////      todo: null\n//      // todo: {\n//      //   id: 4,\n//      //   title: 111,\n//      //   description: '555',\n//      //   date: new Date().toLocaleTimeString(),\n//      //   status: false\n//      // }\n//    };\n//\n////    localStorage.setItem('state', JSON.stringify(this.state));\n//\n//  }\n\n  addTodo(val) {\n      \n        \n      this.props.onAddTask(val);\n//      console.log(this.props.task);\n      localStorage.setItem('state', JSON.stringify(this.props.task));\n   \n  }\n\n  deleteTodo(id) {\n    \n      this.props.onDeleteTask(id);\n       console.log(this.props.task);\n      localStorage.setItem('state', JSON.stringify(this.props.task));\n//       console.log(JSON.parse(localStorage.getItem('state')));\n   \n  }\n\n  updateTodo(id, val) {\n\n    this.props.onUpdateTask(id,val); \n    localStorage.setItem('state', JSON.stringify(this.props.task));\n  }\n\n  checkTodo(id) {\n    this.props.onCheckTask(id);\n      localStorage.setItem('state', JSON.stringify(this.props.task));\n    console.log(this.props.task);\n  }\n\n  selectTodo(id) {\n    \n      this.props.onSelectTask(id); \n      localStorage.setItem('state', JSON.stringify(this.props.task));\n        console.log(this.props.task);   \n  }\n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Welcome to React</h2>\n        </div>\n        <br/>\n        <h1 className=\"\">\n   \n          To do list\n        </h1>\n        <br/>\n        <div >\n          <TodoInput addtodo={this.addTodo.bind(this)} />\n          <br/>\n         \n   {     \n        <TodoList\n            todos={this.props.task.todos}\n            deletetodo={this.deleteTodo.bind(this)}\n            checktodo={this.checkTodo.bind(this)}\n            selecttodo={this.selectTodo.bind(this)}\n          />\n}\n\n        </div>\n        {\n            this.props.selectTodo &&\n          <div >\n            <TodoDetail\n              todo={this.props.task.todo}\n              updatetodo={this.updateTodo.bind(this)}\n            />\n          </div>\n        }\n\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps=state=>{\n    return {\n        task: state,\n        selectTodo:state.selectTodo,\n        todo:state.todo\n    \n    };\n};\nconst mapDispatchToProps = dispatch=>{\n    return {\n        onAddTask:(title) => {dispatch({type: actionTypes.ADD,title:title})},\n        onDeleteTask:(id) => dispatch({type: actionTypes.DELETE,id:id}),\n        onUpdateTask:(id,val) => dispatch({type: actionTypes.UPDATE,id:id,value:val}),\n        onCheckTask:(id) => dispatch({type: actionTypes.CHECK,id:id}),\n        onSelectTask:(id) => dispatch({type: actionTypes.SELECT,id:id}),\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Reducer from './store/reducer/reducer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n//const rootReducer = Reducer;\n\nconst store = createStore(Reducer);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}